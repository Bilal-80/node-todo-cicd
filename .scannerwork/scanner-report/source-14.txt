<?xml version="1.0"?><analysis xmlns="https://jeremylong.github.io/DependencyCheck/dependency-check.4.0.xsd"><scanInfo><engineVersion>11.1.0</engineVersion><dataSource><name>NVD API Last Checked</name><timestamp>2024-11-12T04:38:25Z</timestamp></dataSource><dataSource><name>NVD API Last Modified</name><timestamp>2024-11-12T04:15:06Z</timestamp></dataSource></scanInfo><projectInfo><name>node-todo #12</name><reportDate>2024-11-12T05:26:59.930695204Z</reportDate><credits>This product uses the NVD API but is not endorsed or certified by the NVD. This report contains data retrieved from the National Vulnerability Database: https://nvd.nist.gov, Github Advisory Database (via NPM Audit API): https://github.com/advisories/, and the RetireJS community.</credits></projectInfo><dependencies><dependency isVirtual="true"><fileName>@babel/traverse:7.20.5</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?@babel/traverse</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>@babel/traverse</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>@babel/traverse</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>7.20.5</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/%40babel%2Ftraverse@7.20.5</id><url>https://ossindex.sonatype.org/component/pkg:npm/%40babel%2Ftraverse@7.20.5?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-67hx-6x53-jw92</name><severity unscored="true">critical</severity><cvssV3><baseScore>9.399999618530273</baseScore><attackVector>LOCAL</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>CHANGED</scope><confidentialityImpact>HIGH</confidentialityImpact><integrityImpact>HIGH</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>CRITICAL</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-697</cwe><cwe>CWE-184</cwe></cwes><description>### Impact

Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods.

Known affected plugins are:
- `@babel/plugin-transform-runtime`
- `@babel/preset-env` when using its [`useBuiltIns`](https://babeljs.io/docs/babel-preset-env#usebuiltins) option
- Any &quot;polyfill provider&quot; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`

No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be.

**Users that only compile trusted code are not impacted.**

### Patches

The vulnerability has been fixed in `@babel/traverse@7.23.2`.

Babel 6 does not receive security fixes anymore (see [Babel&apos;s security policy](https://github.com/babel/babel/security/policy)), hence there is no patch planned for `babel-traverse@6`.

### Workarounds

- Upgrade `@babel/traverse` to v7.23.2 or higher. You can do this by deleting it from your package manager&apos;s lockfile and re-installing the dependencies. `@babel/core` &gt;=7.23.2 will automatically pull in a non-vulnerable version.
- If you cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions:
  - `@babel/plugin-transform-runtime` v7.23.2
  - `@babel/preset-env` v7.23.2
  - `@babel/helper-define-polyfill-provider` v0.4.3
  - `babel-plugin-polyfill-corejs2` v0.4.6
  - `babel-plugin-polyfill-corejs3` v0.8.5
  - `babel-plugin-polyfill-es-shims` v0.10.0
  - `babel-plugin-polyfill-regenerator` v0.5.3</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</url><name>https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/babel/babel/releases/tag/v7.23.2</url><name>https://github.com/babel/babel/releases/tag/v7.23.2</name></reference><reference><source>NPM Advisory reference: </source><url>https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</url><name>https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-67hx-6x53-jw92</url><name>https://github.com/advisories/GHSA-67hx-6x53-jw92</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</url><name>https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2023-45133</url><name>https://nvd.nist.gov/vuln/detail/CVE-2023-45133</name></reference><reference><source>NPM Advisory reference: </source><url>https://www.debian.org/security/2023/dsa-5528</url><name>https://www.debian.org/security/2023/dsa-5528</name></reference><reference><source>NPM Advisory reference: </source><url>https://babeljs.io/blog/2023/10/16/cve-2023-45133</url><name>https://babeljs.io/blog/2023/10/16/cve-2023-45133</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</url><name>https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/babel/babel/pull/16033</url><name>https://github.com/babel/babel/pull/16033</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:\@babel\/traverse:\&lt;7.23.2:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="false"><fileName>app.js</fileName><filePath>/var/lib/jenkins/workspace/node-todo/app.js</filePath><md5>1593d7800be89bdf3b1b0ba980012ba5</md5><sha1>156fdb23b005e12076ecd05b9676780a6684dc72</sha1><sha256>25adf1ee6c0bd16aad172a0b97d4e6e974c26609433df704969212e0e8211c97</sha256><evidenceCollected></evidenceCollected></dependency><dependency isVirtual="true"><fileName>body-parser:1.20.1</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?body-parser</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>body-parser</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>body-parser</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>1.20.1</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/body-parser@1.20.1</id><url>https://ossindex.sonatype.org/component/pkg:npm/body-parser@1.20.1?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2024-45590</name><severity>HIGH</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-405</cwe></cwes><description>body-parser is Node.js body parsing middleware. body-parser &lt;1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-45590 for details</description><references><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-45590</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-45590</name></reference><reference><source>OSSIndex</source><url>https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7</url><name>https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-45590?component-type=npm&amp;component-name=body-parser&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-45590] CWE-405: Asymmetric Resource Consumption (Amplification)</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:body-parser:1.20.1:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-qwcr-r2fm-qrc7</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-405</cwe></cwes><description>### Impact

body-parser &lt;1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.

### Patches

this issue is patched in 1.20.3

### References
</description><references><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-45590</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-45590</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-qwcr-r2fm-qrc7</url><name>https://github.com/advisories/GHSA-qwcr-r2fm-qrc7</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/body-parser/commit/b2695c4450f06ba3b0ccf48d872a229bb41c9bce</url><name>https://github.com/expressjs/body-parser/commit/b2695c4450f06ba3b0ccf48d872a229bb41c9bce</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7</url><name>https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:body-parser:\&lt;1.20.3:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>cookie:0.5.0</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?cookie</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>cookie</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>cookie</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>0.5.0</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/cookie@0.5.0</id><url>https://ossindex.sonatype.org/component/pkg:npm/cookie@0.5.0?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2024-47764</name><severity>MEDIUM</severity><cvssV2><score>6.900000095367432</score><accessVector>NETWORK</accessVector><accessComplexity>LOW</accessComplexity><authenticationr></authenticationr><confidentialityImpact></confidentialityImpact><integrityImpact></integrityImpact><availabilityImpact></availabilityImpact><severity>MEDIUM</severity><version>2.0</version></cvssV2><cwes><cwe>CWE-74</cwe></cwes><description>cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-47764?component-type=npm&amp;component-name=cookie&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-47764] CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component (&apos;Injection&apos;)</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-47764</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-47764</name></reference><reference><source>OSSIndex</source><url>https://github.com/jshttp/cookie/issues/165</url><name>https://github.com/jshttp/cookie/issues/165</name></reference><reference><source>OSSIndex</source><url>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</url><name>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:cookie:0.5.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-pxg6-pf52-xh8x</name><severity unscored="true">low</severity><cwes><cwe>CWE-74</cwe></cwes><description>### Impact

The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(&quot;userName=&lt;script&gt;alert(&apos;XSS3&apos;)&lt;/script&gt;; Max-Age=2592000; a&quot;, value)` would result in `&quot;userName=&lt;script&gt;alert(&apos;XSS3&apos;)&lt;/script&gt;; Max-Age=2592000; a=test&quot;`, setting `userName` cookie to `&lt;script&gt;` and ignoring `value`.

A similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.

### Patches

Upgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.

### Workarounds

Avoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.

### References

* https://github.com/jshttp/cookie/pull/167</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x</url><name>https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c</url><name>https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</url><name>https://github.com/advisories/GHSA-pxg6-pf52-xh8x</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/jshttp/cookie/pull/167</url><name>https://github.com/jshttp/cookie/pull/167</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:cookie:\&lt;0.7.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>cookiejar:2.1.3</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?cookiejar</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>cookiejar</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>cookiejar</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>2.1.3</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/cookiejar@2.1.3</id><url>https://ossindex.sonatype.org/component/pkg:npm/cookiejar@2.1.3?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2022-25901</name><severity>HIGH</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the Cookie.parse function, which uses an insecure regular expression.

</description><references><reference><source>OSSIndex</source><url>https://github.com/bmeck/node-cookiejar/pull/39</url><name>https://github.com/bmeck/node-cookiejar/pull/39</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25901</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25901</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2022-25901?component-type=npm&amp;component-name=cookiejar&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2022-25901] CWE-1333</name></reference><reference><source>OSSIndex</source><url>https://bugzilla.redhat.com/show_bug.cgi?id=2161901</url><name>https://bugzilla.redhat.com/show_bug.cgi?id=2161901</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:cookiejar:2.1.3:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-h452-7996-h45h</name><severity unscored="true">moderate</severity><cvssV3><baseScore>5.300000190734863</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `Cookie.parse` function and other aspects of the API, which use an insecure regular expression for parsing cookie values. Applications could be stalled for extended periods of time if untrusted input is passed to cookie values or attempted to parse from request headers.

Proof of concept:

```
ts\nconst { CookieJar } = require(&quot;cookiejar&quot;);

const jar = new CookieJar();

const start = performance.now();

const attack = &quot;a&quot; + &quot;t&quot;.repeat(50_000);
jar.setCookie(attack);

console.log(`CookieJar.setCookie(): ${performance.now() - start}ms`);

```

```
CookieJar.setCookie(): 2963.214399999939ms
```</description><references><reference><source>NPM Advisory reference: </source><url>https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984</url><name>https://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2022-25901</url><name>https://nvd.nist.gov/vuln/detail/CVE-2022-25901</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73</url><name>https://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73</name></reference><reference><source>NPM Advisory reference: </source><url>https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681</url><name>https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-h452-7996-h45h</url><name>https://github.com/advisories/GHSA-h452-7996-h45h</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/bmeck/node-cookiejar/pull/39</url><name>https://github.com/bmeck/node-cookiejar/pull/39</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5</url><name>https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:cookiejar:\&lt;2.1.4:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>debug:3.2.6</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?debug</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>debug</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>debug</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>3.2.6</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/debug@3.2.6</id><url>https://ossindex.sonatype.org/component/pkg:npm/debug@3.2.6?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-gxpj-cx7g-858c</name><severity unscored="true">low</severity><cvssV3><baseScore>3.700000047683716</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>LOW</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-400</cwe></cwes><description>Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. 

As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.

This was later re-introduced in version v3.2.0, and then repatched in versions 3.2.7 and 4.3.1.

## Recommendation

Version 2.x.x: Update to version 2.6.9 or later.
Version 3.1.x: Update to version 3.1.0 or later.
Version 3.2.x: Update to version 3.2.7 or later.
Version 4.x.x: Update to version 4.3.1 or later.</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac</url><name>https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-gxpj-cx7g-858c</url><name>https://github.com/advisories/GHSA-gxpj-cx7g-858c</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/visionmedia/debug/issues/501</url><name>https://github.com/visionmedia/debug/issues/501</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/debug-js/debug/commit/4e2150207c568adb9ead8f4c4528016081c88020</url><name>https://github.com/debug-js/debug/commit/4e2150207c568adb9ead8f4c4528016081c88020</name></reference><reference><source>NPM Advisory reference: </source><url>https://lists.apache.org/thread.html/r8ba4c628fba7181af58817d452119481adce4ba92e889c643e4c7dd3@%3Ccommits.netbeans.apache.org%3E</url><name>https://lists.apache.org/thread.html/r8ba4c628fba7181af58817d452119481adce4ba92e889c643e4c7dd3@%3Ccommits.netbeans.apache.org%3E</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/debug-js/debug/issues/797</url><name>https://github.com/debug-js/debug/issues/797</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/debug-js/debug/commit/71169065b5262f9858ac78cc0b688c84a438f290</url><name>https://github.com/debug-js/debug/commit/71169065b5262f9858ac78cc0b688c84a438f290</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/visionmedia/debug/pull/504</url><name>https://github.com/visionmedia/debug/pull/504</name></reference><reference><source>NPM Advisory reference: </source><url>https://lists.apache.org/thread.html/rb5ac16fad337d1f3bb7079549f97d8166d0ef3082629417c39f12d63@%3Cnotifications.netbeans.apache.org%3E</url><name>https://lists.apache.org/thread.html/rb5ac16fad337d1f3bb7079549f97d8166d0ef3082629417c39f12d63@%3Cnotifications.netbeans.apache.org%3E</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a</url><name>https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2017-16137</url><name>https://nvd.nist.gov/vuln/detail/CVE-2017-16137</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:debug:\&gt;\=3.2.0\&lt;3.2.7:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>ejs:2.7.4</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?ejs</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>ejs</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>ejs</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>2.7.4</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/ejs@2.7.4</id><url>https://ossindex.sonatype.org/component/pkg:npm/ejs@2.7.4?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2022-29078</name><severity>CRITICAL</severity><cvssV3><baseScore>9.800000190734863</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>HIGH</confidentialityImpact><integrityImpact>HIGH</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>CRITICAL</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-94</cwe></cwes><description>The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).</description><references><reference><source>OSSIndex</source><url>https://github.com/mde/ejs/issues/451</url><name>https://github.com/mde/ejs/issues/451</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-29078</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-29078</name></reference><reference><source>OSSIndex</source><url>https://eslam.io/posts/ejs-server-side-template-injection-rce/</url><name>https://eslam.io/posts/ejs-server-side-template-injection-rce/</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2022-29078?component-type=npm&amp;component-name=ejs&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2022-29078] CWE-94: Improper Control of Generation of Code (&apos;Code Injection&apos;)</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:ejs:2.7.4:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-phwq-j96m-2c2q</name><severity unscored="true">critical</severity><cvssV3><baseScore>9.800000190734863</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>HIGH</confidentialityImpact><integrityImpact>HIGH</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>CRITICAL</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-74</cwe></cwes><description>The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).</description><references><reference><source>NPM Advisory reference: </source><url>https://security.netapp.com/advisory/ntap-20220804-0001/</url><name>https://security.netapp.com/advisory/ntap-20220804-0001/</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/mde/ejs/releases</url><name>https://github.com/mde/ejs/releases</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-phwq-j96m-2c2q</url><name>https://github.com/advisories/GHSA-phwq-j96m-2c2q</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf</url><name>https://github.com/mde/ejs/commit/15ee698583c98dadc456639d6245580d17a24baf</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2022-29078</url><name>https://nvd.nist.gov/vuln/detail/CVE-2022-29078</name></reference><reference><source>NPM Advisory reference: </source><url>https://eslam.io/posts/ejs-server-side-template-injection-rce/</url><name>https://eslam.io/posts/ejs-server-side-template-injection-rce/</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:ejs:\&lt;3.1.7:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="OSSINDEX"><name>CVE-2024-33883</name><severity>HIGH</severity><cvssV3><baseScore>8.600000381469727</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-693</cwe></cwes><description>The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-33883?component-type=npm&amp;component-name=ejs&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-33883] CWE-693: Protection Mechanism Failure</name></reference><reference><source>OSSIndex</source><url>https://github.com/advisories/GHSA-ghr5-ch3p-vcr6</url><name>https://github.com/advisories/GHSA-ghr5-ch3p-vcr6</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-33883</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-33883</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:ejs:2.7.4:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-ghr5-ch3p-vcr6</name><severity unscored="true">moderate</severity><cvssV3><baseScore>4.0</baseScore><attackVector>LOCAL</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1321</cwe><cwe>CWE-693</cwe></cwes><description>The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-ghr5-ch3p-vcr6</url><name>https://github.com/advisories/GHSA-ghr5-ch3p-vcr6</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/mde/ejs/compare/v3.1.9...v3.1.10</url><name>https://github.com/mde/ejs/compare/v3.1.9...v3.1.10</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-33883</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-33883</name></reference><reference><source>NPM Advisory reference: </source><url>https://security.netapp.com/advisory/ntap-20240605-0003</url><name>https://security.netapp.com/advisory/ntap-20240605-0003</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/mde/ejs/commit/e469741dca7df2eb400199e1cdb74621e3f89aa5</url><name>https://github.com/mde/ejs/commit/e469741dca7df2eb400199e1cdb74621e3f89aa5</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:ejs:\&lt;3.1.10:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>express:4.18.2</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?express</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>express</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>express</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>4.18.2</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/express@4.18.2</id><url>https://ossindex.sonatype.org/component/pkg:npm/express@4.18.2?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2024-29041</name><severity>MEDIUM</severity><cvssV3><baseScore>6.099999904632568</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>CHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>NONE</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1286</cwe></cwes><description>Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-29041?component-type=npm&amp;component-name=express&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-29041] CWE-1286 CWE-601</name></reference><reference><source>OSSIndex</source><url>https://github.com/advisories/GHSA-rv95-896h-c2vc</url><name>https://github.com/advisories/GHSA-rv95-896h-c2vc</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-29041</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-29041</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:express:4.18.2:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-rv95-896h-c2vc</name><severity unscored="true">moderate</severity><cvssV3><baseScore>6.099999904632568</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>CHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>NONE</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-601</cwe><cwe>CWE-1286</cwe></cwes><description>### Impact

Versions of Express.js prior to 4.19.2 and pre-release alpha and beta versions before 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs.

When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.

The main method impacted is `res.location()` but this is also called from within `res.redirect()`.

### Patches

https://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd
https://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94

An initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.

### Workarounds

The fix for this involves pre-parsing the url string with either `require(&apos;node:url&apos;).parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.

### References

https://github.com/expressjs/express/pull/5539
https://github.com/koajs/koa/issues/1800
https://expressjs.com/en/4x/api.html#res.location</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/security/advisories/GHSA-rv95-896h-c2vc</url><name>https://github.com/expressjs/express/security/advisories/GHSA-rv95-896h-c2vc</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd</url><name>https://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-29041</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-29041</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/pull/5539</url><name>https://github.com/expressjs/express/pull/5539</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-rv95-896h-c2vc</url><name>https://github.com/advisories/GHSA-rv95-896h-c2vc</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/koajs/koa/issues/1800</url><name>https://github.com/koajs/koa/issues/1800</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94</url><name>https://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94</name></reference><reference><source>NPM Advisory reference: </source><url>https://expressjs.com/en/4x/api.html#res.location</url><name>https://expressjs.com/en/4x/api.html#res.location</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:express:\&lt;4.19.2:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-qw6h-vgh9-j6wx</name><severity unscored="true">moderate</severity><cvssV3><baseScore>5.0</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>### Impact

In express &lt;4.20.0, passing untrusted user input - even after sanitizing it - to `response.redirect()` may execute untrusted code

### Patches

this issue is patched in express 4.20.0

### Workarounds

users are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist

### Details

successful exploitation of this vector requires the following:

1. The attacker MUST control the input to response.redirect()
1. express MUST NOT redirect before the template appears
1. the browser MUST NOT complete redirection before:
1. the user MUST click on the link in the template
</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-qw6h-vgh9-j6wx</url><name>https://github.com/advisories/GHSA-qw6h-vgh9-j6wx</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/security/advisories/GHSA-qw6h-vgh9-j6wx</url><name>https://github.com/expressjs/express/security/advisories/GHSA-qw6h-vgh9-j6wx</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/express/commit/54271f69b511fea198471e6ff3400ab805d6b553</url><name>https://github.com/expressjs/express/commit/54271f69b511fea198471e6ff3400ab805d6b553</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-43796</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-43796</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:express:\&lt;4.20.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="OSSINDEX"><name>CVE-2024-43796</name><severity>MEDIUM</severity><cvssV3><baseScore>4.699999809265137</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>CHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>NONE</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>Express.js minimalist web framework for node. In express &lt; 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.</description><references><reference><source>OSSIndex</source><url>https://github.com/advisories/GHSA-qw6h-vgh9-j6wx</url><name>https://github.com/advisories/GHSA-qw6h-vgh9-j6wx</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-43796?component-type=npm&amp;component-name=express&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-43796] CWE-79: Improper Neutralization of Input During Web Page Generation (&apos;Cross-site Scripting&apos;)</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43796</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43796</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:express:4.18.2:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>flat:4.1.1</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?flat</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>flat</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>flat</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>4.1.1</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/flat@4.1.1</id><url>https://ossindex.sonatype.org/component/pkg:npm/flat@4.1.1?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-2j2x-2gpw-g8fm</name><severity unscored="true">critical</severity><cvssV3><baseScore>9.800000190734863</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>HIGH</confidentialityImpact><integrityImpact>HIGH</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>CRITICAL</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1321</cwe></cwes><description>flat helps flatten/unflatten nested Javascript objects. A vulnerability, which was classified as critical, was found in hughsk flat up to 5.0.0. This affects the function unflatten of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes (&apos;prototype pollution&apos;). It is possible to initiate the attack remotely. Upgrading to version 5.0.1 can address this issue. The name of the patch is 20ef0ef55dfa028caddaedbcb33efbdb04d18e13. It is recommended to upgrade the affected component. The identifier VDB-216777 was assigned to this vulnerability.</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-2j2x-2gpw-g8fm</url><name>https://github.com/advisories/GHSA-2j2x-2gpw-g8fm</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/hughsk/flat/issues/105</url><name>https://github.com/hughsk/flat/issues/105</name></reference><reference><source>NPM Advisory reference: </source><url>https://vuldb.com/?id.216777</url><name>https://vuldb.com/?id.216777</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/hughsk/flat/pull/106</url><name>https://github.com/hughsk/flat/pull/106</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2020-36632</url><name>https://nvd.nist.gov/vuln/detail/CVE-2020-36632</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/hughsk/flat/releases/tag/5.0.1</url><name>https://github.com/hughsk/flat/releases/tag/5.0.1</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/hughsk/flat/commit/20ef0ef55dfa028caddaedbcb33efbdb04d18e13</url><name>https://github.com/hughsk/flat/commit/20ef0ef55dfa028caddaedbcb33efbdb04d18e13</name></reference><reference><source>NPM Advisory reference: </source><url>https://vuldb.com/?ctiid.216777</url><name>https://vuldb.com/?ctiid.216777</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:flat:\&lt;5.0.1:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>get-func-name:2.0.0</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?get-func-name</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>get-func-name</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>get-func-name</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>2.0.0</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/get-func-name@2.0.0</id><url>https://ossindex.sonatype.org/component/pkg:npm/get-func-name@2.0.0?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2023-43646</name><severity>HIGH</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>get-func-name is a module to retrieve a function&apos;s name securely and consistently both in NodeJS and the browser. Versions prior to 2.0.1 are subject to a regular expression denial of service (redos) vulnerability which may lead to a denial of service when parsing malicious input. This vulnerability can be exploited when there is an imbalance in parentheses, which results in excessive backtracking and subsequently increases the CPU load and processing time significantly. This vulnerability can be triggered using the following input: &apos;\t&apos;.repeat(54773) + &apos;\t/function/i&apos;. This issue has been addressed in commit `f934b228b` which has been included in releases from 2.0.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><references><reference><source>OSSIndex</source><url>https://github.com/chaijs/get-func-name/security/advisories/GHSA-4q6p-r6v2-jvc5</url><name>https://github.com/chaijs/get-func-name/security/advisories/GHSA-4q6p-r6v2-jvc5</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2023-43646?component-type=npm&amp;component-name=get-func-name&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2023-43646] CWE-1333 CWE-400</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-43646</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-43646</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:get-func-name:2.0.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-4q6p-r6v2-jvc5</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-400</cwe><cwe>CWE-1333</cwe></cwes><description>The current regex implementation for parsing values in the module is susceptible to excessive backtracking, leading to potential DoS attacks. The regex implementation in question is as follows:

```js
const functionNameMatch = /\s*function(?:\s|\s*\/\*[^(?:*/)]+\*\/\s*)*([^\s(/]+)/;
```

This vulnerability can be exploited when there is an imbalance in parentheses, which results in excessive backtracking and subsequently increases the CPU load and processing time significantly. This vulnerability can be triggered using the following input:

```js
&apos;\t&apos;.repeat(54773) + &apos;\t/function/i&apos;
```

Here is a simple PoC code to demonstrate the issue:

```js
const protocolre = /\sfunction(?:\s|\s/*[^(?:*\/)]+*/\s*)*([^\(\/]+)/;

const startTime = Date.now();
const maliciousInput = &apos;\t&apos;.repeat(54773) + &apos;\t/function/i&apos;

protocolre.test(maliciousInput);

const endTime = Date.now();

console.log(&quot;process time: &quot;, endTime - startTime, &quot;ms&quot;);
```</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/chaijs/get-func-name/security/advisories/GHSA-4q6p-r6v2-jvc5</url><name>https://github.com/chaijs/get-func-name/security/advisories/GHSA-4q6p-r6v2-jvc5</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/chaijs/get-func-name/blob/78ad756441a83f3dc203e50f76c113ae3ac017dc/index.js#L15</url><name>https://github.com/chaijs/get-func-name/blob/78ad756441a83f3dc203e50f76c113ae3ac017dc/index.js#L15</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/chaijs/get-func-name/commit/f934b228b5e2cb94d6c8576d3aac05493f667c69</url><name>https://github.com/chaijs/get-func-name/commit/f934b228b5e2cb94d6c8576d3aac05493f667c69</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2023-43646</url><name>https://nvd.nist.gov/vuln/detail/CVE-2023-43646</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-4q6p-r6v2-jvc5</url><name>https://github.com/advisories/GHSA-4q6p-r6v2-jvc5</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:get-func-name:\&lt;2.0.1:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>minimatch:3.0.4</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?minimatch</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>minimatch</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>minimatch</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>3.0.4</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/minimatch@3.0.4</id><url>https://ossindex.sonatype.org/component/pkg:npm/minimatch@3.0.4?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-f8q6-p94x-37v3</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-400</cwe><cwe>CWE-1333</cwe></cwes><description>A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.</description><references><reference><source>NPM Advisory reference: </source><url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK</url><name>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6</url><name>https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6</name></reference><reference><source>NPM Advisory reference: </source><url>https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html</url><name>https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2022-3517</url><name>https://nvd.nist.gov/vuln/detail/CVE-2022-3517</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-f8q6-p94x-37v3</url><name>https://github.com/advisories/GHSA-f8q6-p94x-37v3</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/nodejs/node/issues/42510</url><name>https://github.com/nodejs/node/issues/42510</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/grafana/grafana-image-renderer/issues/329</url><name>https://github.com/grafana/grafana-image-renderer/issues/329</name></reference><reference><source>NPM Advisory reference: </source><url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3</url><name>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:minimatch:\&lt;3.0.5:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>path-to-regexp:0.1.7</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?path-to-regexp</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>path-to-regexp</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>path-to-regexp</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>0.1.7</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/path-to-regexp@0.1.7</id><url>https://ossindex.sonatype.org/component/pkg:npm/path-to-regexp@0.1.7?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2024-45296</name><severity>HIGH</severity><cvssV2><score>8.699999809265137</score><accessVector>NETWORK</accessVector><accessComplexity>LOW</accessComplexity><authenticationr></authenticationr><confidentialityImpact></confidentialityImpact><integrityImpact></integrityImpact><availabilityImpact></availabilityImpact><severity>HIGH</severity><version>2.0</version></cvssV2><cwes><cwe>CWE-1333</cwe></cwes><description>path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.</description><references><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-45296</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-45296</name></reference><reference><source>OSSIndex</source><url>https://github.com/advisories/GHSA-9wv6-86v2-598j</url><name>https://github.com/advisories/GHSA-9wv6-86v2-598j</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-45296?component-type=npm&amp;component-name=path-to-regexp&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-45296] CWE-1333</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:path-to-regexp:0.1.7:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-9wv6-86v2-598j</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>### Impact

A bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.

### Patches

For users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.

These versions add backtrack protection when a custom regex pattern is not provided:

- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)
- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)
- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)
- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)

They do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.

Version [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.

Version [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.

### Workarounds

All versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.

If paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.

### Details

Using `/:a-:b` will produce the regular expression `/^\/([^\/]+?)-([^\/]+?)\/?$/`. This can be exploited by a path such as `/a${&apos;-a&apos;.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.

Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.

### References

* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f</url><name>https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef</url><name>https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j</url><name>https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-45296</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-45296</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-9wv6-86v2-598j</url><name>https://github.com/advisories/GHSA-9wv6-86v2-598j</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485</url><name>https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6</url><name>https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0</url><name>https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894</url><name>https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:path-to-regexp:\&lt;0.1.10:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>semver:5.7.1</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?semver</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>semver</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>semver</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>5.7.1</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/semver@5.7.1</id><url>https://ossindex.sonatype.org/component/pkg:npm/semver@5.7.1?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2022-25883</name><severity>HIGH</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.



Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-25883 for details</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2022-25883?component-type=npm&amp;component-name=semver&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2022-25883] CWE-1333</name></reference><reference><source>OSSIndex</source><url>https://vuldb.com/?id.232060</url><name>https://vuldb.com/?id.232060</name></reference><reference><source>OSSIndex</source><url>https://github.com/npm/node-semver/pull/564</url><name>https://github.com/npm/node-semver/pull/564</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25883</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25883</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:semver:5.7.1:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-c2qf-rxjj-qqgw</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/585</url><name>https://github.com/npm/node-semver/pull/585</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/internal/re.js#L160</url><name>https://github.com/npm/node-semver/blob/main/internal/re.js#L160</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</url><name>https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/internal/re.js#L138</url><name>https://github.com/npm/node-semver/blob/main/internal/re.js#L138</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</url><name>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</url><name>https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2022-25883</url><name>https://nvd.nist.gov/vuln/detail/CVE-2022-25883</name></reference><reference><source>NPM Advisory reference: </source><url>https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</url><name>https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</url><name>https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/564</url><name>https://github.com/npm/node-semver/pull/564</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</url><name>https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/593</url><name>https://github.com/npm/node-semver/pull/593</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:semver:\&lt;5.7.2:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>semver:6.3.0</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?semver</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>semver</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>semver</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>6.3.0</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/semver@6.3.0</id><url>https://ossindex.sonatype.org/component/pkg:npm/semver@6.3.0?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="OSSINDEX"><name>CVE-2022-25883</name><severity>HIGH</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.



Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-25883 for details</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2022-25883?component-type=npm&amp;component-name=semver&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2022-25883] CWE-1333</name></reference><reference><source>OSSIndex</source><url>https://vuldb.com/?id.232060</url><name>https://vuldb.com/?id.232060</name></reference><reference><source>OSSIndex</source><url>https://github.com/npm/node-semver/pull/564</url><name>https://github.com/npm/node-semver/pull/564</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25883</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25883</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:semver:6.3.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="NPM"><name>GHSA-c2qf-rxjj-qqgw</name><severity unscored="true">high</severity><cvssV3><baseScore>7.5</baseScore><attackVector>NETWORK</attackVector><attackComplexity>LOW</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>NONE</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>NONE</confidentialityImpact><integrityImpact>NONE</integrityImpact><availabilityImpact>HIGH</availabilityImpact><baseSeverity>HIGH</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-1333</cwe></cwes><description>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/585</url><name>https://github.com/npm/node-semver/pull/585</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/internal/re.js#L160</url><name>https://github.com/npm/node-semver/blob/main/internal/re.js#L160</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</url><name>https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/internal/re.js#L138</url><name>https://github.com/npm/node-semver/blob/main/internal/re.js#L138</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</url><name>https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</url><name>https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2022-25883</url><name>https://nvd.nist.gov/vuln/detail/CVE-2022-25883</name></reference><reference><source>NPM Advisory reference: </source><url>https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</url><name>https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</url><name>https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/564</url><name>https://github.com/npm/node-semver/pull/564</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</url><name>https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/npm/node-semver/pull/593</url><name>https://github.com/npm/node-semver/pull/593</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:semver:\&gt;\=6.0.0\&lt;6.3.1:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>send:0.18.0</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?send</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>send</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>send</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>0.18.0</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/send@0.18.0</id><url>https://ossindex.sonatype.org/component/pkg:npm/send@0.18.0?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-m6fv-jmcg-4jfg</name><severity unscored="true">moderate</severity><cvssV3><baseScore>5.0</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>### Impact

passing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code

### Patches

this issue is patched in send 0.19.0

### Workarounds

users are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist

### Details

successful exploitation of this vector requires the following:

1. The attacker MUST control the input to response.redirect()
1. express MUST NOT redirect before the template appears
1. the browser MUST NOT complete redirection before:
1. the user MUST click on the link in the template
</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/send/commit/ae4f2989491b392ae2ef3b0015a019770ae65d35</url><name>https://github.com/pillarjs/send/commit/ae4f2989491b392ae2ef3b0015a019770ae65d35</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-43799</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-43799</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg</url><name>https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-m6fv-jmcg-4jfg</url><name>https://github.com/advisories/GHSA-m6fv-jmcg-4jfg</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:send:\&lt;0.19.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="OSSINDEX"><name>CVE-2024-43799</name><severity>MEDIUM</severity><cvssV3><baseScore>4.699999809265137</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>CHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>NONE</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-43799 for details</description><references><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-43799?component-type=npm&amp;component-name=send&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-43799] CWE-79: Improper Neutralization of Input During Web Page Generation (&apos;Cross-site Scripting&apos;)</name></reference><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43799</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43799</name></reference><reference><source>OSSIndex</source><url>https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg</url><name>https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:send:0.18.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="true"><fileName>serve-static:1.15.0</fileName><filePath>/var/lib/jenkins/workspace/node-todo/package-lock.json?serve-static</filePath><md5></md5><sha1></sha1><sha256></sha256><projectReferences><projectReference>package-lock.json: transitive</projectReference></projectReferences><evidenceCollected><evidence type="vendor" confidence="HIGH"><source>package.json</source><name>name</name><value>serve-static</value></evidence><evidence type="product" confidence="HIGHEST"><source>package.json</source><name>name</name><value>serve-static</value></evidence><evidence type="version" confidence="HIGHEST"><source>package.json</source><name>version</name><value>1.15.0</value></evidence></evidenceCollected><identifiers><package confidence="HIGHEST"><id>pkg:npm/serve-static@1.15.0</id><url>https://ossindex.sonatype.org/component/pkg:npm/serve-static@1.15.0?utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url></package></identifiers><vulnerabilities><vulnerability source="NPM"><name>GHSA-cm22-4g7w-348p</name><severity unscored="true">moderate</severity><cvssV3><baseScore>5.0</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>UNCHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>LOW</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>### Impact

passing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code

### Patches

this issue is patched in serve-static 1.16.0

### Workarounds

users are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist

### Details

successful exploitation of this vector requires the following:

1. The attacker MUST control the input to response.redirect()
1. express MUST NOT redirect before the template appears
1. the browser MUST NOT complete redirection before:
1. the user MUST click on the link in the template
</description><references><reference><source>NPM Advisory reference: </source><url>https://github.com/advisories/GHSA-cm22-4g7w-348p</url><name>https://github.com/advisories/GHSA-cm22-4g7w-348p</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p</url><name>https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/serve-static/commit/0c11fad159898cdc69fd9ab63269b72468ecaf6b</url><name>https://github.com/expressjs/serve-static/commit/0c11fad159898cdc69fd9ab63269b72468ecaf6b</name></reference><reference><source>NPM Advisory reference: </source><url>https://github.com/expressjs/serve-static/commit/ce730896fddce1588111d9ef6fdf20896de5c6fa</url><name>https://github.com/expressjs/serve-static/commit/ce730896fddce1588111d9ef6fdf20896de5c6fa</name></reference><reference><source>NPM Advisory reference: </source><url>https://nvd.nist.gov/vuln/detail/CVE-2024-43800</url><name>https://nvd.nist.gov/vuln/detail/CVE-2024-43800</name></reference></references><vulnerableSoftware><software>cpe:2.3:a:*:serve-static:\&lt;1.16.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability><vulnerability source="OSSINDEX"><name>CVE-2024-43800</name><severity>MEDIUM</severity><cvssV3><baseScore>4.699999809265137</baseScore><attackVector>NETWORK</attackVector><attackComplexity>HIGH</attackComplexity><privilegesRequired>NONE</privilegesRequired><userInteraction>REQUIRED</userInteraction><scope>CHANGED</scope><confidentialityImpact>LOW</confidentialityImpact><integrityImpact>LOW</integrityImpact><availabilityImpact>NONE</availabilityImpact><baseSeverity>MEDIUM</baseSeverity><version>3.1</version></cvssV3><cwes><cwe>CWE-79</cwe></cwes><description>serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-43800 for details</description><references><reference><source>OSSIndex</source><url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43800</url><name>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-43800</name></reference><reference><source>OSSIndex</source><url>https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p</url><name>https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p</name></reference><reference><source>OSSINDEX</source><url>https://ossindex.sonatype.org/vulnerability/CVE-2024-43800?component-type=npm&amp;component-name=serve-static&amp;utm_source=dependency-check&amp;utm_medium=integration&amp;utm_content=11.1.0</url><name>[CVE-2024-43800] CWE-79: Improper Neutralization of Input During Web Page Generation (&apos;Cross-site Scripting&apos;)</name></reference></references><vulnerableSoftware><software vulnerabilityIdMatched="true">cpe:2.3:a:*:serve-static:1.15.0:*:*:*:*:*:*:*</software></vulnerableSoftware></vulnerability></vulnerabilities></dependency><dependency isVirtual="false"><fileName>test.js</fileName><filePath>/var/lib/jenkins/workspace/node-todo/test.js</filePath><md5>93e539f8546ebf3e83cf96c8ed738403</md5><sha1>e2464028e47f2993b0e0b95ade3107bcdadfb119</sha1><sha256>e0cc8b707ad69b042de82af8a36647e06147a5da0980dc119692bbd1264bd544</sha256><evidenceCollected></evidenceCollected></dependency></dependencies></analysis>